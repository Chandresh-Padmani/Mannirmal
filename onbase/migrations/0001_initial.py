# Generated by Django 3.2.6 on 2021-08-09 06:45

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='count_model',
            fields=[
                ('field_name1', models.CharField(max_length=25, primary_key=True, serialize=False)),
                ('field_value1', models.IntegerField()),
                ('field_name2', models.CharField(max_length=25)),
                ('field_value2', models.IntegerField()),
                ('field_name3', models.CharField(max_length=25)),
                ('field_value3', models.IntegerField()),
                ('field_name4', models.CharField(max_length=25)),
                ('field_value4', models.IntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='donors_model',
            fields=[
                ('donor_name', models.CharField(max_length=30, primary_key=True, serialize=False)),
                ('donor_location', models.CharField(max_length=60)),
                ('donor_quote', models.TextField(max_length=400)),
            ],
        ),
        migrations.CreateModel(
            name='ideas_model',
            fields=[
                ('first_name', models.CharField(max_length=30, validators=[django.core.validators.RegexValidator(code='invalid', message='Please enter a valid name. Names may only contain alphabets.', regex='^[a-zA-Z]+$')])),
                ('last_name', models.CharField(max_length=30, validators=[django.core.validators.RegexValidator(code='invalid', message='Please enter a valid name. Names may only contain alphabets.', regex='^[a-zA-Z]+$')])),
                ('email', models.EmailField(max_length=254, primary_key=True, serialize=False, validators=[django.core.validators.EmailValidator()])),
                ('phone_number', models.CharField(max_length=15, validators=[django.core.validators.RegexValidator(code='invalid_phonenumber', message='Please enter a valid phone number. Phone numbers may only contain numbers', regex='^([0-9]{5,15})+$')])),
                ('feedback', models.CharField(default='', max_length=300, validators=[django.core.validators.RegexValidator(code='invalid_description', message='Only the following special characters are allowed: ,.?!;\'"', regex='^[a-zA-Z0-9\'":()&$%-_@+#*=.;,?!\\s]*$')])),
                ('thoughts', models.CharField(default='', max_length=300, validators=[django.core.validators.RegexValidator(code='invalid_description', message='Only the following special characters are allowed: ,.?!;\'"', regex='^[a-zA-Z0-9\'":()&$%-_@+#*=.;,?!\\s]*$')])),
            ],
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cover', models.FileField(upload_to='images/')),
            ],
        ),
        migrations.CreateModel(
            name='vol_model',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=30, validators=[django.core.validators.RegexValidator(code='invalid', message='Please enter a valid name. Names may only contain alphabets.', regex='^[a-zA-Z]+$')])),
                ('last_name', models.CharField(max_length=30, validators=[django.core.validators.RegexValidator(code='invalid', message='Please enter a valid name. Names may only contain alphabets.', regex='^[a-zA-Z]+$')])),
                ('date_of_birth', models.DateField()),
                ('gender', models.CharField(max_length=6)),
                ('email', models.EmailField(max_length=254, validators=[django.core.validators.EmailValidator()])),
                ('phone_number', models.CharField(max_length=15, validators=[django.core.validators.RegexValidator(code='invalid_phonenumber', message='Please enter a valid phone number. Phone numbers may only contain numbers', regex='^([0-9+\\s]{5,15})+$')])),
                ('address', models.CharField(max_length=100)),
                ('city', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator(code='invalid_city', message='Please enter a valid city. City names may only contain alphabets.', regex='^[a-zA-Z]+$')])),
                ('country', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator(code='invalid_country', message='Please enter a valid country. Country names may only contain alphabets.', regex='^[a-zA-Z]+$')])),
                ('postal_code', models.CharField(max_length=15, validators=[django.core.validators.RegexValidator(code='invalid_postalcode', message='Please enter a valid postal code. Postal code may only contain numbers', regex='^([0-9]{0,5})+$')])),
                ('description', models.CharField(blank=True, default='', max_length=300, validators=[django.core.validators.RegexValidator(code='invalid_description', message='Only the following special characters are allowed: ,.?!;\'"', regex='^[a-zA-Z0-9\'":()&$%-_@+#*=.;,?!\\s]*$')])),
                ('is_active', models.BooleanField(default=False)),
            ],
        ),
    ]
